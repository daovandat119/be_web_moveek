datasource db {
  provider = "mysql"
  url      = env("MYSQL_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../../generated/prisma-mysql"
}

enum Role {
  SUPER_ADMIN
  BRAND_MANAGER
  CINEMA_MANAGER
  COUNTER_STAFF
  USER
  REVIEWER
}

enum Status {
  ACTIVE
  INACTIVE
}

model Provinces {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  slug      String   @unique
  cinemas   Cinema[]
  users     User[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([slug])
}

model CinemaBrand {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  slug      String   @unique
  logo      String?
  users     User[]
  cinemas   Cinema[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([slug])
}

model Cinema {
  id          Int    @id @default(autoincrement())
  name        String @unique
  slug        String @unique
  address     String
  status      Status @default(ACTIVE)
  mapLink     String @map("map_link")
  brandId     Int    @map("brand_id")
  provinceId  Int    @map("province_id")
  description String @db.Text

  brand    CinemaBrand @relation(fields: [brandId], references: [id])
  province Provinces   @relation(fields: [provinceId], references: [id])
  users    User[]
  counter  Counter[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([slug])
  @@index([brandId])
}

model Counter {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  slug      String   @unique
  cinemaId  Int      @map("cinema_id")
  cinema    Cinema   @relation(fields: [cinemaId], references: [id])
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  users     User[]

  @@index([cinemaId])
}

model User {
  id            Int          @id @default(autoincrement())
  username      String       @unique
  slug          String       @unique
  email         String       @unique
  emailVerified Boolean      @default(false) @map("email_verified")
  phone         String?      @unique
  phoneVerified Boolean      @default(false) @map("phone_verified")
  fullName      String?      @map("full_name")
  avatar        String?
  balance       Int          @default(0)
  password      String
  refreshToken  String?      @map("refresh_token") @db.Text
  codeId        String?      @map("code_id")
  codeExpired   DateTime?    @map("code_expired")
  role          Role         @default(USER)
  status        Status       @default(INACTIVE)
  provinceId    Int?         @map("province_id")
  province      Provinces?   @relation(fields: [provinceId], references: [id])
  brandId       Int?         @map("brand_id")
  brand         CinemaBrand? @relation(fields: [brandId], references: [id])
  cinemaId      Int?         @map("cinema_id")
  cinema        Cinema?      @relation(fields: [cinemaId], references: [id])
  counterId     Int?         @map("counter_id")
  counter       Counter?     @relation(fields: [counterId], references: [id])
  createdAt     DateTime     @default(now()) @map("created_at")
  updatedAt     DateTime     @updatedAt @map("updated_at")

  @@index([brandId, cinemaId])
  @@index([slug])
}
